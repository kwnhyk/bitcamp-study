package com.eomcs.lmsst.util;

import java.util.Arrays;

import sun.jvm.hotspot.oops.ObjArrayKlass;

public class ArrayList<E> {
	private static final int DEFAULT_CAPACITY=10;
	Object[] elementData ;
	int size;
	
	public ArrayList() {
	
	this.elementData =  new Object[DEFAULT_CAPACITY];
	}
	
	public ArrayList(int initalCapacity){
		if(initalCapacity < DEFAULT_CAPACITY){
			this.elementData = new Object[DEFAULT_CAPACITY];
		}
		else{
			this.elementData = new Object[initalCapacity];
		}

		
		
	}
	public void add(Object e){
	

	if(this.size == this.elementData.length){
	int oldSize = this.elementData.length;
	int newSize = oldSize+(oldSize >>1);
	this.elementData = Arrays.copyOf(this.elementData, newSize);
/*
	Object[] newArr = new Object[newSize];
	for(int i = 0;i <this.size;i++){
		newArr[i] = this.elementData[i]	;	
		
	}
	this.elementData = newArr;
		*/
}

		this.elementData[this.size++] =e;
	}



	public E get(int index){
		if(index <0 || index>=this.size){
		return null;
		}

		return  this.elementData[index];
	}
	public E set(int index,Object e){
		if(index <0 || index>=this.size){
			return null;
			}
			E oldValue = (E)this.elementData[index];

		this.elementData[index] = e;
		return oldValue;
	}
	public E remove(int index){
		if(index<0 || index >=this.size){
		return null;
		
		}
		E oldValue = (E)this.elementData[index];
		System.arraycopy(this.elementData, index+1, this.elementData, 
		index, this.size-(index+1));
		/*
		
		for(int i = index+1; i< this.size; i++){
			this.elementData[i-1] = this.elementData[i];
			
		}
		*/
		this.size--;
		return oldValue;
	}
	public int size(){
		return this.size;
		
	}
	public Object[] toArray(){
		return Arrays.copyOf(this.elementData, this.size);
		/*
		Object[] arr = new Object[this.size];
		for(int i = 0; i<this.size; i++){
			arr[i] = this.elementData[i];

		}
		return arr;
	}
	*/
}
}

